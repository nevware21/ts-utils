{
    "name": "@nevware21/ts-utils",
    "description": "Common JavaScript/TypeScript helper functions for better minification",
    "version": "0.12.1",
    "homepage": "https://github.com/nevware21/ts-utils",
    "license": "MIT",
    "author": {
        "name": "Nevware21 Solutions LLC",
        "email": "github@nevware21.com"
    },
    "keywords": [
        "ts",
        "typescript",
        "js",
        "javascript",
        "minification",
        "minify",
        "utils",
        "helper",
        "node",
        "browser",
        "worker",
        "webworker",
        "polyfill",
        "ES5",
        "ES6",
        "ES7",
        "ES2015",
        "ES2016",
        "ES2017",
        "ES2018",
        "ES2019",
        "ES2020",
        "ECMAScript 5",
        "ECMAScript 6",
        "ECMAScript 7",
        "ECMAScript 2015",
        "ECMAScript 2016",
        "ECMAScript 2017",
        "ECMAScript 2018",
        "ECMAScript 2019",
        "ECMAScript 2020",
        "ECMAScript 2021",
        "ECMAScript 2022",
        "ECMAScript 2023",
        "getDocument",
        "getGlobal",
        "getHistory",
        "getInst",
        "getNavigator",
        "getWindow",
        "hasDocument",
        "hasHistory",
        "hasNavigator",
        "hasWindow",
        "isNode",
        "isWebWorker",
        "isArray",
        "isArrayBuffer",
        "isBlob",
        "isBoolean",
        "isDate",
        "isError",
        "isFile",
        "isFormData",
        "isFunction",
        "isIterable",
        "isIterator",
        "isNullOrUndefined",
        "isNumber",
        "isObject",
        "isPromise",
        "isPromiseLike",
        "isThenable",
        "isRegExp",
        "isStrictNullOrUndefined",
        "isStrictUndefined",
        "isString",
        "isTypeof",
        "isUndefined",
        "hasValue",
        "isDefined",
        "isNotTruthy",
        "isTruthy",
        "string left",
        "strLeft",
        "string right",
        "strRight",
        "normalize js name",
        "letter case",
        "lettercase",
        "camel case",
        "camelcase",
        "kebab case",
        "kebabcase",
        "snake case",
        "snakecase",
        "uppercase",
        "lowercase",
        "custom error",
        "asString",
        "hasOwn",
        "defineProperty",
        "timeout",
        "idle timer",
        "timer",
        "interval",
        "includes",
        "string contains",
        "html encode"
    ],
    "main": "lib/dist/es5/main/ts-utils.js",
    "esnext:main": "lib/dist/es6/main/ts-utils.js",
    "module": "lib/dist/es5/mod/ts-utils.js",
    "esnext:module": "lib/dist/es6/mod/ts-utils.js",
    "types": "lib/dist/types/ts-utils.d.ts",
    "sideEffects": false,
    "scripts": {
        "build": "grunt ts_utils --verbose && npm run package && npm run dtsgen",
        "rebuild": "npm run build && npm run test && npm run size && npm run size-check",
        "package": "rollup -c lib/rollup.config.js --bundleConfigAsCjs",
        "test": "npm run test:node && npm run test:browser && npm run test:worker && npm run coverage:report",
        "test:node": "nyc ts-mocha -p lib/test/tsconfig.test.json lib/test/src/node/**/*.test.ts lib/test/src/common/**/*.test.ts",
        "test:browser": "karma start karma.browser.conf.js --single-run",
        "test:worker": "cross-env NODE_OPTIONS='--max-old-space-size=16384' karma start karma.worker.conf.js --single-run",
        "debug:browser": "karma start karma.debug.browser.conf.js --watch",
        "debug:worker": "karma start karma.debug.worker.conf.js --watch",
        "lint": "grunt ts_utils-lint",
        "coverage:report": "npm run coverage:nyc && npm run coverage:merge",
        "coverage:nyc": "nyc report --reporter=json",
        "coverage:merge": "merge-coverage",
        "codecov": "npm run coverage:merge",
        "clean": "git clean -xdf && npm install",
        "cleanBuild": "npm run clean && npm run rebuild",
        "docs": "typedoc --plugin typedoc-github-theme",
        "prep-release": "npm run cleanBuild && npm run npm-pack",
        "npm-pack": "copyfiles README.md LICENSE lib && cd lib && npm pack",
        "npm-publish": "publish-npm",
        "dtsgen": "api-extractor run --local --verbose",
        "size": "size-limit",
        "size-save": "size-limit --clean-dir --save-bundle build/size",
        "size-check": "node lib/test/bundle-size-check.js",
        "link-check": "node lib/test/readme-links-check.js",
        "readme-link-check": "npm run docs && npm run link-check"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/nevware21/ts-utils.git"
    },
    "bugs": {
        "url": "https://github.com/nevware21/ts-utils/issues"
    },
    "licenses": [
        {
            "type": "MIT",
            "url": "https://github.com/nevware21/ts-utils/blob/main/LICENSE"
        }
    ],
    "engines": {
        "node": ">= 0.8.0"
    },
    "devDependencies": {
        "@istanbuljs/nyc-config-typescript": "^1.0.2",
        "@microsoft/api-extractor": "^7.34.4",
        "@nevware21/coverage-tools": "^0.1.3",
        "@nevware21/grunt-eslint-ts": "^0.5.1",
        "@nevware21/grunt-ts-plugin": "^0.5.1",
        "@nevware21/publish-npm": "^0.1.3",
        "@nevware21/tripwire-chai": ">= 0.1.2 && < 2.0.0",
        "@rollup/plugin-commonjs": "^28.0.0",
        "@rollup/plugin-json": "^6.0.0",
        "@rollup/plugin-node-resolve": "^16.0.0",
        "@rollup/plugin-strip": "^3.0.2",
        "@rollup/plugin-typescript": "^12.1.0",
        "@size-limit/esbuild-why": "^11.1.6",
        "@size-limit/preset-small-lib": "^11.1.6",
        "@size-limit/time": "^11.1.6",
        "@types/eslint": "^8.56.10",
        "@types/estree": "^1.0.0",
        "@types/mocha": "^10.0.1",
        "@types/sinon": "^17.0.1",
        "@typescript-eslint/eslint-plugin": "^7.14.1",
        "@typescript-eslint/parser": "^7.14.1",
        "chromium": "^3.0.3",
        "codecov": "^3.8.3",
        "copyfiles": "^2.4.1",
        "cross-env": "^7.0.3",
        "eslint": "^8.56.0",
        "eslint-formatter-codeframe": "^7.32.1",
        "eslint-plugin-security": "^1.5.0",
        "glob": "11.0.1",
        "grunt": "^1.5.3",
        "grunt-cli": "^1.4.3",
        "karma": "^6.4.3",
        "karma-chrome-launcher": "^3.2.0",
        "karma-coverage": "^2.2.1",
        "karma-coverage-istanbul-reporter": "^3.0.3",
        "karma-mocha": "^2.0.1",
        "karma-mocha-webworker": "^1.3.0",
        "karma-rollup-preprocessor": "^7.0.8",
        "karma-spec-reporter": "^0.0.36",
        "karma-typescript": "^5.5.4",
        "mocha": "^11.2.0",
        "nyc": "^17.0.0",
        "puppeteer": "^24.0.0",
        "rollup": "^4.14.1",
        "rollup-plugin-cleanup": "^3.2.1",
        "rollup-plugin-istanbul": "^5.0.0",
        "rollup-plugin-minify-es": "^1.1.1",
        "rollup-plugin-sourcemaps": "^0.6.3",
        "sinon": "^15.0.0",
        "size-limit": "^11.2.0",
        "ts-mocha": "^11.1.0",
        "tslib": "^2.6.0",
        "typedoc": "^0.28.2",
        "typedoc-github-theme": "^0.3.0",
        "typescript": "~5.2.2",
        "uglify-js": "^3.15.5"
    }
}
